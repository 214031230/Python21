#!/usr/bin/env python
# -*- coding:utf-8 -*-

# 正则表达式  字符串匹配相关的操作的时候 用到的一种规则
# 正则表达式的规则
# 使用python中的re模块去操作正则表达式
#

# 元字符 对一个字符的匹配创建的一些规则
# 这些规则是在正则表达式中有着特殊意义的符号
# 如果要匹配的字符刚好是和元字符一模一样 那么需要对这个元字符进行转义

# 量词 量词跟在一个元字符的后面 约束某个字符的规则能够重复多少次

# 正则表达式默认 贪婪匹配 会在当前量词约束的范围内匹配最多的次数


import re
# ret = re.findall('\d+', 'eva1236 e12gon y1280uan')
# print(ret)
# findall找所有

# ret = re.search('----', 'eva1236 e12gon y1280uan')
# if ret:print(ret.group())
# search找第一个
# 返回的值不是一个直接的结果 而是一个内存地址 需要使用.group()取值
# 如果匹配不上 返回None 就不能group

# ret = re.match('^\d+', '1231eva1236 e12gon y1280uan')
# print(ret)
# if ret:print(ret.group())
# match在search的基础上 给每一条正则都加上了一个^


# ret = 1 - 2 * ( (60-30 +(-40/5) * (9-2*5/3 + 7 /3*99/4*2998 +10 * 568/14 )) - (-4*3)/ (16-3*2) )
# print(ret)

express = '1 - 2 * ( (60-30 +(-40/5) * (9-2*5/3 + 7 /3*99/4*2998 +10 * 568/14 )) - (-4*3)/ (16-3*2) )'
# 2776672.6952380957
# eval
# 先算小括号里的
# 再先乘除后加减的计算

# 'a*b'

# 50行之内

# 三级菜单 递归 + 堆栈
# 时间模块 计算时间差
# random模块  发红包 验证码
# os 计算文件夹内所有文件的总大小