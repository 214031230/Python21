# 面向对象
# 类 实例化 对象/实例
# 什么是类？ 拥有相同属性和方法的一类事物
# 什么是对象？ 类的一个实际表现，给类中的属性填上具体的值，能够使用类中的方法
# 实例化的过程中做了那些事儿？
    # 对象 = 类名()
    # 首先要创造一个对象
    # 被创造出来的这个对象会作为参数传递给__init__方法中的第一个参数
    # 调用__init__方法，传递一些初始化参数 —— 初始化方法
    # 将初始化之后的对象返回给调用者
# 查看属性和调用方法
    # 类名 ： 静态属性、类属性
    # 对象 ： 调用方法（动态属性）、查看对象的属性
# 组合 : 两类事物之间的所有关系，什么有什么的关系
# 继承 ：两个类之间的包含关系，什么是什么的关系
    # 钻石继承问题
        # 经典类 ： 在一个子类中寻找方法的时候，从子类到父类先找到的名字会被执行。
                    # 深度优先就是在经典类中找类的顺序的一种算法
        # 新式类 ： 广度优先
        # py2中，主动继承object类的都是新式类，它的子类也是新式类
        # py3中，所有的类都是新式类，都继承object
    # super ：
        # 自己有父类也有的时候，在单继承中super就可以用父类的
        # 在多继承中 super遵循mro广度优先顺序
    # 派生 ：
        # 属性
        # 方法
# 多态
        # python中不需要程序员自己实现多态
        # 在其他强数据类型舒颜的面向对象中，我要传递一个参数必须指定这个参数的数据类型
        # 但是，往往在这个地方需要传递的不止一种类型
        # 建立一个父类，让所有要传递的数据类型都继承这个父类，在参数指定数据类型的时候
        # 指定父类名就可以了

# def eat(Animal alex):pass


# 思维导图
    # python ：基础数据类型 文件处理 函数 模块 面向对象
    # 函数
        # 函数的定义 ：参数和返回值
        # 生成器函数
        # 递归函数
        # 内置函数
        # 匿名函数
    # 面向对象
        # 基础概念
        # 定义
        # 三大特性 ： 封装
                    # 多态
                    # 继承

# 北大研究生 ：
    # 整理
    # 时间分片


